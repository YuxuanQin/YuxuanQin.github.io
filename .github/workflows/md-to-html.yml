name: Convert Markdown to HTML with Timestamp

on:
  push:
    paths:
      - '**.md'  # 仅在 .md 文件发生变化时触发

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      # 检出仓库
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 获取最近两次提交，用于比较文件变化

      # 安装 Pandoc
      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      # 获取发生变化的 .md 文件
      - name: Get changed .md files
        id: get-changed-files
        run: |
          # 获取当前提交和上一次提交的差异
          CHANGED_FILES=$(git diff --name-only --diff-filter=M HEAD~1 HEAD 2>/dev/null | grep '\.md$' || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No .md files changed."
          else
            echo "Changed .md files: $CHANGED_FILES"
          fi
          echo "::set-output name=changed_files::$CHANGED_FILES"

      # 获取当前提交的时间
      - name: Get commit date
        id: get-commit-date
        run: |
          COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          echo "Commit date: $COMMIT_DATE"
          echo "::set-output name=commit_date::$COMMIT_DATE"

      # 转换发生变化的 .md 文件为 .html，并添加时间戳
      - name: Convert changed .md to .html with timestamp
        run: |
          # 将日期转换为中文格式
          convert_to_chinese_date() {
            local year=$1
            local month=$2
            local day=$3

            # 中文数字映射
            local chinese_numbers=("〇" "一" "二" "三" "四" "五" "六" "七" "八" "九")
            local chinese_months=("一月" "二月" "三月" "四月" "五月" "六月" "七月" "八月" "九月" "十月" "十一月" "十二月")

            # 转换年份
            local chinese_year=""
            for (( i=0; i<${#year}; i++ )); do
              chinese_year+="${chinese_numbers[${year:$i:1}]}"
            done

            # 转换月份
            local chinese_month="${chinese_months[$((month-1))]}"

            # 转换日期
            local chinese_day=""
            if (( day < 10 )); then
              chinese_day+="${chinese_numbers[$day]}"
            else
              chinese_day+="十"
              if (( day > 10 )); then
                chinese_day+="${chinese_numbers[$((day-10))]}"
              fi
            fi

            echo "${chinese_year}年${chinese_month}${chinese_day}日"
          }

          # 获取提交日期并转换为中文格式
          COMMIT_DATE=${{ steps.get-commit-date.outputs.commit_date }}
          IFS='-' read -r YEAR MONTH DAY <<< "$COMMIT_DATE"
          CHINESE_DATE=$(convert_to_chinese_date "$YEAR" "$MONTH" "$DAY")

          # 获取发生变化的 .md 文件
          CHANGED_FILES=${{ steps.get-changed-files.outputs.changed_files }}

          # 如果没有变化的文件，跳过转换
          if [ -z "$CHANGED_FILES" ]; then
            echo "No .md files changed. Skipping conversion."
            exit 0
          fi

          # 转换发生变化的 .md 文件
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              html_file="${file%.md}.html"
              pandoc -c "/styles/styles.css" "$file" -o index.html --mathml
              echo "Converted $file to $html_file"

              # 在 .html 文件末尾添加时间戳，并设置靠右对齐
              echo '<footer style="text-align: right;">最后更新：'"$CHINESE_DATE"'</footer>' >> "$html_file"
              echo "Added timestamp to $html_file"
            else
              echo "File $file does not exist. Skipping."
            fi
          done

      # 提交并推送生成的 .html 文件
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-generated HTML files from changed Markdown with timestamp" || echo "No changes to commit"
          git push || echo "No changes to push"
